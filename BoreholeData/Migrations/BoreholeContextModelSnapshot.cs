// <auto-generated />
using BoreholeData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoreholeData.Migrations
{
    [DbContext(typeof(BoreholeContext))]
    partial class BoreholeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoreholeData.Entities.Borehole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Depth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Boreholes");

                    b.HasDiscriminator().HasValue("Borehole");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BoreholeData.Entities.CableBorehole", b =>
                {
                    b.HasBaseType("BoreholeData.Entities.Borehole");

                    b.Property<string>("CableStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CableType")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("CableBorehole");
                });

            modelBuilder.Entity("BoreholeData.Entities.DrillBorehole", b =>
                {
                    b.HasBaseType("BoreholeData.Entities.Borehole");

                    b.Property<string>("DrillStrength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrillType")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("DrillBorehole");
                });
#pragma warning restore 612, 618
        }
    }
}
